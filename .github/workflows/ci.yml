name: ci

on:
  pull_request:
  release:
    types: [published]
  push:
    tags:
    branches:
      - main
      - develop

env:
  VERBOSE: 1

jobs:
  Release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        compiler:
          - clang
        build_type:
          - Release
        package_generator:
          - TBZ2
          - ZIP
          - DMG
        include:
          - os: macos-latest
            package_generator: DMG
          - os: ubuntu-latest
            package_generator: TBZ2
          - os: windows-latest
            package_generator: ZIP

    steps:
      - uses: actions/checkout@v4

      - name: Set up Clang (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang ninja-build

      - name: Set up Clang (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install llvm ninja

      - name: Set up Clang (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Configure CMake
        run: |
          cmake -S . -B ./build -G Ninja  -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} -Djson2cpp_PACKAGING_MAINTAINER_MODE:BOOL=ON -Djson2cpp_ENABLE_CPPCHECK:BOOL=OFF
          if: ${{ matrix.os == 'macos-latest' }}
          run: cmake -S . -B ./build -G Ninja -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 -Djson2cpp_PACKAGING_MAINTAINER_MODE:BOOL=ON -D CMAKE_OSX_ARCHITECTURES="x86_64;arm64" -Djson2cpp_ENABLE_CPPCHECK:BOOL=OFF

      - name: Build
        run: |
          cmake --build ./build --config ${{matrix.build_type}}

      - name: CPack
        working-directory: ./build
        run: |
          cmake --build . --target package --config ${{matrix.build_type}}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-${{ matrix.package_generator }}
          path: ./build/*.${{ matrix.package_generator == 'ZIP' && 'zip' || matrix.package_generator == 'TBZ2' && 'tar.bz2' || matrix.package_generator == 'DMG' && 'dmg' || '' }}

      - name: Publish Snapshot Release
        uses: softprops/action-gh-release@v1
        if: ${{ (github.ref == 'refs/heads/main') }}
        with:
          tag_name: "snapshot-${{ github.sha }}"
          files: |
            ./build/*.*

      - name: Publish Tagged Release
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            ./build/*.*
