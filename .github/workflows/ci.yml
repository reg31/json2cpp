name: ci

on:
  pull_request:
  release:
    types: [published]
  push:
    tags:
    branches:
      - main
      - develop

env:
  VERBOSE: 1

jobs:
  Release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        compiler:
          - clang
        build_type:
          - Release
        package_generator:
          - TBZ2
          - ZIP

    steps:
      - uses: actions/checkout@v4

      - name: Set up Clang (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang ninja-build

      - name: Set up Clang (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install llvm ninja
          echo "/opt/homebrew/opt/llvm/bin" >>$GITHUB_PATH

      - name: Set up msvc (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: x64

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        run: cmake -S . -B ./build -G Ninja -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} -Djson2cpp_PACKAGING_MAINTAINER_MODE:BOOL=ON -Djson2cpp_ENABLE_CPPCHECK:BOOL=OFF -DGIT_SHA:STRING=${{ github.sha }}

      - name: Configure CMake (other systems)
        if: runner.os != 'Windows'
        run: cmake -S . -B ./build -G Ninja -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} -Djson2cpp_PACKAGING_MAINTAINER_MODE:BOOL=ON -Djson2cpp_ENABLE_CPPCHECK:BOOL=OFF -DGIT_SHA:STRING=${{ github.sha }} -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

      - name: Build
        run: cmake --build ./build --config ${{matrix.build_type}}

      - name: CPack
        if: matrix.package_generator != ''
        working-directory: ./build
        run: |
          cpack -C ${{matrix.build_type}} -G ${{matrix.package_generator}}

      - name: Publish Snapshot Release
        uses: softprops/action-gh-release@v1
        if: ${{ (github.ref == 'refs/heads/main') && matrix.package_generator != '' }}
        with:
          tag_name: "snapshot-${{ github.sha }}"
          files: |
            build/*-*${{ matrix.build_type }}*-*.*

      - name: Publish Tagged Release
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') && matrix.package_generator != '' }}
        with:
          files: |
            build/*-*${{ matrix.build_type }}*-*.*
